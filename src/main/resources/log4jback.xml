<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <property name="SODB_HOME" value="/opt/sodb"></property>  
<!-- scan:属性设置为true，配置文件如果发生改变，将会被重新加载，默认为true -->
<!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟 -->
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
     <!-- 日志输出编码 -->  
        <Encoding>UTF-8</Encoding>
        <layout class="ch.qos.logback.classic.PatternLayout">
             <!-- <pattern>%d{HH:mm:ss.SSS} [%thread] [%c] %-5p - %m%n</pattern> -->
             <!--device模块 <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] [%c] %-5p - %m%n</pattern>-->
             <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符--> 
             <!--%logger{50}: 50 表示长度，代表输出包是完整输出还是简短输出，至少包括包的首字母-->
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </layout>
    </appender>
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 日志输出编码 -->  
        <Encoding>UTF-8</Encoding>
        <!--被写入的文件名，可以是相对目录，也可以是绝对目录，如果上级目录不存在，自动创建，无默认值 ,当EMM_LOG_HOME 无值时取：C:/emmlog -->
        <file>${SODB_HOME}/log/sodb.log</file>
        <!-- 日志文件固定窗口滚动策略，固定归档文件序号 minIndex ~ maxIndex -->
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${SODB_HOME}/log/sodb.%i.log.zip</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>12</maxIndex>
        </rollingPolicy>
        <!-- 基于文件尺寸大小触发归档策略 -->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>100MB</maxFileSize>
        </triggeringPolicy>
        <!-- 日志输出格式 -->
        <!-- %d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度     -->
        <!--%logger{50}: 50 表示长度，代表输出包是完整输出还是简短输出，至少包括包的首字母-->
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}[%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="FILE_ERROR"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${SODB_HOME}/log/sodb_error.log</file> <!-- 滚动方式 300M -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${SODB_HOME}/log/sodb_error.%i.log.zip
            </fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>12</maxIndex>
        </rollingPolicy>

        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>300MB</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <pattern>%date{YYYY-MM-dd HH:mm:ss} %level [%thread] %logger{10}
                [%file:%line] %msg%n</pattern>
        </encoder>
    </appender>


    <logger name="com.mysql" level="INFO"/>
    <logger name="com.air.security.sodb" level="INFO" />
    <logger name="com.apache.ibatis" level="INFO"/>
    <!--root-->
    <root>
    <!-- level：用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，不能设置为INHERITED或者同义词NULL -->
        <level value="INFO"/>
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="FILE_ERROR" level="error" />
    </root>
</configuration>