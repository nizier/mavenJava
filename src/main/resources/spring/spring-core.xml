<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    
    <context:annotation-config/>
    <context:component-scan base-package="com.air.security.sodb"/>
    <context:property-placeholder location="classpath*:*.properties" file-encoding="UTF-8" ignore-unresolvable="true"/>
    <!-- 
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="driverClassName" value="${datasource.driverClassName}"/>
        <property name="url" value="${datasource.url}"/>
        <property name="username" value="${datasource.username}"/>
        <property name="password" value="${datasource.password}"/>
        <property name="initialSize" value="${datasource.initialSize}"/>
        <property name="maxActive" value="${datasource.maxActive}"/>
        <property name="maxIdle" value="${datasource.maxIdle}"/>
        <property name="minIdle" value="${datasource.minIdle}"/>
        <property name="maxWait" value="${datasource.maxWait}"/>
        <property name="validationQuery" value="${datasource.validationQuery}"/>
        <property name="testOnBorrow" value="${datasource.testOnBorrow}"/>
        <property name="testOnReturn" value="${datasource.testOnReturn}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${datasource.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${datasource.minEvictableIdleTimeMillis}"/>
    </bean>
    
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
     -->
    <!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="databaseIdProvider" ref="databaseIdProvider"/>
        <property name="mapperLocations" value="classpath*:mapper/**/*.xml"></property>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            dialect=mysql -->
                            <!--返回count-->
                            <!-- rowBoundsWithCount=true -->
                            <!--offset会当成pageNum使用，limit和pageSize含义相同-->
                            <!-- offsetAsPageNum=true -->
                            <!--这时如果pageNum<1会查询第一页，如果pageNum>总页数会查询最后一页-->
                            <!-- reasonable=true -->
                       <!--  </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean> -->
    
   <!--  <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>
    
    <bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
        <property name="properties" ref="vendorProperties"/>
    </bean> -->

    <bean id="vendorProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="MySQL">mysql</prop>
                <prop key="Oracle">oracle</prop>
            </props>
        </property>
    </bean>
    
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.air.security.sodb.*.dao"/>
        <property name="properties">
            <value>
                mappers=com.air.security.sodb.core.base.BaseMapper
            </value>
        </property>
    </bean>
    
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- StringHttpMessageConverter编码为UTF-8，防止乱码 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
                <property name="supportedMediaTypes">
                    <list>
                        <bean class="org.springframework.http.MediaType">
                            <constructor-arg index="0" value="text"/>
                            <constructor-arg index="1" value="plain"/>
                            <constructor-arg index="2" value="UTF-8"/>
                        </bean>
                        <bean class="org.springframework.http.MediaType">
                            <constructor-arg index="0" value="*"/>
                            <constructor-arg index="1" value="*"/>
                            <constructor-arg index="2" value="UTF-8"/>
                        </bean>
                    </list>
                </property>
            </bean>

            <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
            <bean id="fastJsonHttpMessageConverter"
                  class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
                <property name="features">
                    <list>
                        <array value-type="com.alibaba.fastjson.serializer.SerializerFeature">
                            <value>DisableCircularReferenceDetect</value><!-- 解决json ref 问题 -->
                        </array>
                        <value>WriteMapNullValue</value>  <!-- 输出null值 -->
                        <value>QuoteFieldNames</value><!-- key 使用双引号 -->
                        <value>WriteNullListAsEmpty</value><!-- list为null时转成[] -->
                        <value>WriteNullStringAsEmpty</value><!-- 字符串为null时转成“” -->
                        <value>WriteNullNumberAsZero</value><!-- 数值字段如果为null,输出为0,而非null -->
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="viewClass"  
            value="org.springframework.web.servlet.view.JstlView" />  
        <property name="prefix" value="/pages" />  
        <property name="suffix" value=".jsp" />  
    </bean> 
    
    <!-- 拦截器   -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/**/login"/>
            <bean class="com.air.security.sodb.core.interceptor.SodbInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>
    
    <!-- 静态资源访问   -->
    <mvc:default-servlet-handler/>
    <mvc:resources location="/img/" mapping="/img/**" />  
	<mvc:resources location="/css/" mapping="/css/**" />  
	<mvc:resources location="/js/" mapping="/js/**" />  
    
 </beans>